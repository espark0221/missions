<html>
    <head>
        <meta charset="UTF-8">
        <title>출력결과</title>
    </head>
    <body>
        <script>
            function solution(arr) {
                let n = arr.length;
                let answer = 0
                let map = [];
                let zero =  Array.from({length:n+2}, ()=>0) // 배열길이 +2만큼 0을 담아 배열로 반환

                // 봉우리 지도 
                map.push(zero) // 첫째줄 0
                for (let i=0; i<arr.length; i++){
                    map.push([0]) // 현재줄 첫번째값 0 추가
                    for (let j=0; j<arr.length; j++){
                        map[i+1].push(arr[i][j])
                    }  
                    map[i+1].push(0) // 현재줄 마지막값 0 추가                   
                }              
                map.push(zero) // 마지막줄 0

                // 봉우리 개수
                for (let x=0; x<map.length; x++){
                    for(let y=0; y<map.length; y++){
                        const item = map[x][y]
                        const up =  beforeIndex(x) ? map[beforeIndex(x)][y] : null // 상
                        const down = afterIndex(x)<n ? map[afterIndex(x)][y] : null // 하
                        const leftSide = beforeIndex(y) ? map[x][beforeIndex(y)] : null // 좌
                        const rightSide = afterIndex(y)<n ? map[x][afterIndex(y)] : null // 우
                        if(item > up && item > down && item > leftSide && item > rightSide) answer++; // 모두큰경우에만 answer 증가
                    
                    }
                }         
                return answer;
            }
            // 이전 인덱스
            function beforeIndex(index){
                if (index-1 && index-1>0) return index-1 // 이전인덱스가 map에 존재하는 경우에만 반환
                return null
            }
            // 이후 인덱스
            function afterIndex(index){
                return index+1
            }
            let arr = [[5,3,7,2,3],[3,7,1,6,1],[7,2,5,3,4],[4,3,6,4,1],[8,7,3,5,2]];
            console.log(solution(arr))
        </script>
    </body>
</html>
